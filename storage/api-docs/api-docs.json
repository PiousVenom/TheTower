{
    "openapi": "3.0.0",
    "info": {
        "title": "The Tower API (v1)",
        "description": "Endpoints for various resources in The Tower.",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api/v1",
            "description": "Version 1"
        }
    ],
    "paths": {
        "/background-skins/{id}": {
            "get": {
                "tags": [
                    "Background Skins"
                ],
                "summary": "Get a background skin",
                "description": "Retrieve a single background skin.",
                "operationId": "3411514fab05a93d116134cd2cb1e4cf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Background skin detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundSkinResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Background Skins"
                ],
                "summary": "Delete background skin",
                "description": "Soft-delete a background skin.",
                "operationId": "b410a25ce3d601bf737c527dcbe05839",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Background Skins"
                ],
                "summary": "Update background skin",
                "description": "Update an existing background skin.",
                "operationId": "67f2718d174d82a87d7ae3d13068e7c3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBackgroundSkinRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundSkinResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/background-skins": {
            "get": {
                "tags": [
                    "Background Skins"
                ],
                "summary": "List background skins",
                "description": "List background skins (paginated).",
                "operationId": "57c8ca3b93ed9359d2465f4821fe5ade",
                "responses": {
                    "200": {
                        "description": "Paginated list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundSkinCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Background Skins"
                ],
                "summary": "Create background skin",
                "description": "Create a new background skin.",
                "operationId": "6c7b517a43708751b9e2ef4312a98b7e",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBackgroundSkinRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundSkinResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/background-skins/{id}/restore": {
            "patch": {
                "tags": [
                    "Background Skins"
                ],
                "summary": "Restore background skin",
                "description": "Restore a soft-deleted background skin.",
                "operationId": "d565a3546cecfb2cc7ac1ee043990449",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackgroundSkinResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/bonus-types/{bonus_type}": {
            "get": {
                "tags": [
                    "Bonus Types"
                ],
                "summary": "Get a bonus type",
                "description": "Show a single bonus type.",
                "operationId": "7a96920dc97c7b06baed8e2154ba7d71",
                "parameters": [
                    {
                        "name": "bonus_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 9
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bonus-type detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BonusTypeResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Bonus Types"
                ],
                "summary": "Delete (soft) a bonus type",
                "description": "Soft-delete a bonus type.",
                "operationId": "8650cc54fea5dea5c9ea6c288fdeb8c5",
                "parameters": [
                    {
                        "name": "bonus_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 9
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Bonus Types"
                ],
                "summary": "Update a bonus type",
                "description": "Update a bonus type.",
                "operationId": "787f4239727523ebc8bb4e55f2a8c984",
                "parameters": [
                    {
                        "name": "bonus_type",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 9
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateBonusTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated bonus type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BonusTypeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/bonus-types": {
            "get": {
                "tags": [
                    "Bonus Types"
                ],
                "summary": "List bonus types",
                "description": "List bonus types (paginated).",
                "operationId": "fc9a85a5425cf9d4778faa7d0d574b3c",
                "responses": {
                    "200": {
                        "description": "Paginated list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BonusTypeCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Bonus Types"
                ],
                "summary": "Create a bonus type",
                "description": "Create a bonus type.",
                "operationId": "806ddb5e63a90675cadea2fa7bc249a7",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreBonusTypeRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BonusTypeResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/bonus-types/{id}/restore": {
            "patch": {
                "tags": [
                    "Bonus Types"
                ],
                "summary": "Restore a bonus type",
                "description": "Restore a soft-deleted bonus type.",
                "operationId": "7f2b80b17985d27dc3f488d5b92813ad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 9
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored bonus type",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BonusTypeResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Bonus type is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/guardians/{id}": {
            "get": {
                "tags": [
                    "Guardians"
                ],
                "summary": "Get a guardian",
                "description": "Retrieve a single guardian.",
                "operationId": "047e192be5a0801ec0558d078ad0fc46",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Guardian detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuardianResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Guardians"
                ],
                "summary": "Delete guardian",
                "description": "Soft-delete a guardian.",
                "operationId": "fdd0247f282a4a336c0de2ccc6817399",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Guardians"
                ],
                "summary": "Update guardian",
                "description": "Update an existing guardian.",
                "operationId": "50672f79a16f72257e4c987ba6225d10",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateGuardianRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated guardian",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuardianResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/guardians": {
            "get": {
                "tags": [
                    "Guardians"
                ],
                "summary": "List guardians",
                "description": "List guardians (paginated).",
                "operationId": "68beb576f44c06a01f1846ab6d1d5b32",
                "responses": {
                    "200": {
                        "description": "Paginated list of guardians",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuardianCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Guardians"
                ],
                "summary": "Create guardian",
                "description": "Create a new guardian.",
                "operationId": "8b24d41ba56246e2374a71fdbb584834",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreGuardianRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuardianResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/guardians/{id}/restore": {
            "patch": {
                "tags": [
                    "Guardians"
                ],
                "summary": "Restore guardian",
                "description": "Restore a soft-deleted guardian.",
                "operationId": "196f13d001343cfcf4da12b842a478c8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored guardian",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuardianResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Guardian is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/menus/{id}": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "Get a menu",
                "description": "Retrieve a single menu.",
                "operationId": "3702f68603c17b4a04e5e5c35f31f5f4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Menu detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Menus"
                ],
                "summary": "Delete menu",
                "description": "Soft-delete a menu.",
                "operationId": "60298d7d2d9100279e4904bc90ef15bf",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Menus"
                ],
                "summary": "Update menu",
                "description": "Update an existing menu.",
                "operationId": "e3ae92ff310432ca0784611b874a454b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMenuRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/menus": {
            "get": {
                "tags": [
                    "Menus"
                ],
                "summary": "List menus",
                "description": "List menus (paginated).",
                "operationId": "6a471d71b55cf04ae64844611e541c4a",
                "responses": {
                    "200": {
                        "description": "Paginated list of menus",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Menus"
                ],
                "summary": "Create menu",
                "description": "Create a new menu.",
                "operationId": "919180cbe58d90b236fa054287c4cfcc",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreMenuRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/menus/{id}/restore": {
            "patch": {
                "tags": [
                    "Menus"
                ],
                "summary": "Restore menu",
                "description": "Restore a soft-deleted menu.",
                "operationId": "1c62f9c9208d82ac548b16ea17872aae",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored menu",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MenuResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Menu is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/profileBanners/{id}": {
            "get": {
                "tags": [
                    "ProfileBanners"
                ],
                "summary": "Get a profileBanner",
                "description": "Retrieve a single profileBanner.",
                "operationId": "2c284d72438c8a699b0fa3d5b21d8ab8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ProfileBanner detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileBannerResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ProfileBanners"
                ],
                "summary": "Delete profileBanner",
                "description": "Soft-delete a profileBanner.",
                "operationId": "c331ed96990d64776bb17e6ebd4a9b59",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "ProfileBanners"
                ],
                "summary": "Update profileBanner",
                "description": "Update an existing profileBanner.",
                "operationId": "6620de2108f88e54bbfb1a89331e2e89",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateProfileBannerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated profileBanner",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileBannerResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/profileBanners": {
            "get": {
                "tags": [
                    "ProfileBanners"
                ],
                "summary": "List profileBanners",
                "description": "List profileBanners (paginated).",
                "operationId": "e51086f79727f055aa35e51bccedaec9",
                "responses": {
                    "200": {
                        "description": "Paginated list of profileBanners",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileBannerCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ProfileBanners"
                ],
                "summary": "Create profileBanner",
                "description": "Create a new profileBanner.",
                "operationId": "1a2695d49d7ef308d5ddd1f2e954b31b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreProfileBannerRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileBannerResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/profileBanners/{id}/restore": {
            "patch": {
                "tags": [
                    "ProfileBanners"
                ],
                "summary": "Restore profileBanner",
                "description": "Restore a soft-deleted profileBanner.",
                "operationId": "7b6eb65b9a3156891413c9ba9acd33a9",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored profileBanner",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ProfileBannerResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "ProfileBanner is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/relics/{relic}": {
            "get": {
                "tags": [
                    "Relics"
                ],
                "summary": "Get a relic",
                "description": "Show a single relic.",
                "operationId": "842ce04485b9073c5d3899c4ca0c5ee3",
                "parameters": [
                    {
                        "name": "relic",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Relic detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelicResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Relics"
                ],
                "summary": "Soft-delete a relic",
                "description": "Delete (soft-delete) a relic.",
                "operationId": "22c00018e33b57698893075e60200bcc",
                "parameters": [
                    {
                        "name": "relic",
                        "in": "path",
                        "description": "Relic ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted (no content)"
                    },
                    "404": {
                        "description": "Relic not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Relics"
                ],
                "summary": "Update a relic",
                "description": "Update a relic.",
                "operationId": "af3cbe187885adf3d0353f6a99ba0d88",
                "parameters": [
                    {
                        "name": "relic",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateRelicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated relic",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelicResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/relics": {
            "get": {
                "tags": [
                    "Relics"
                ],
                "summary": "List relics",
                "description": "List relics (paginated).",
                "operationId": "3d53e5fa003de3e936f580caa95c6414",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page (default 50)",
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelicCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Relics"
                ],
                "summary": "Create a relic",
                "description": "Create a relic.",
                "operationId": "a83793aa596e72a5949e794ad5e9b10b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreRelicRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelicResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/relics/{id}/restore": {
            "patch": {
                "tags": [
                    "Relics"
                ],
                "summary": "Restore a soft-deleted relic",
                "description": "Restore (undelete) a relic.",
                "operationId": "7d5a0e0f118a602d8f10e6ebaa971768",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Relic ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored relic",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RelicResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Relic is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/songs/{id}": {
            "get": {
                "tags": [
                    "Songs"
                ],
                "summary": "Get a song",
                "description": "Retrieve a single song.",
                "operationId": "a0187b84f0a6790cef394acb64b8cd1a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Song detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SongResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Songs"
                ],
                "summary": "Delete song",
                "description": "Soft-delete a song.",
                "operationId": "3c7f1dd92626ad1f86d40cef09534b20",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Songs"
                ],
                "summary": "Update song",
                "description": "Update an existing song.",
                "operationId": "fa98d6c9c9c76e242d50148aa3842d17",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateSongRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated song",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SongResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/songs": {
            "get": {
                "tags": [
                    "Songs"
                ],
                "summary": "List songs",
                "description": "List songs (paginated).",
                "operationId": "0751edaebbf4754eea938a020909339d",
                "responses": {
                    "200": {
                        "description": "Paginated list of songs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SongCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Songs"
                ],
                "summary": "Create song",
                "description": "Create a new song.",
                "operationId": "b7ea7730fabf1fb0142ca570702358b3",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreSongRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SongResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/songs/{id}/restore": {
            "patch": {
                "tags": [
                    "Songs"
                ],
                "summary": "Restore song",
                "description": "Restore a soft-deleted song.",
                "operationId": "0513d957cdeed83627e1d1f0603254e3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored song",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SongResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Song is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/tiers/{tier}": {
            "get": {
                "tags": [
                    "Tiers"
                ],
                "summary": "Get a tier",
                "description": "Show a single tier.",
                "operationId": "36f733ebeb2cf94e12e5ff11bcfff8fd",
                "parameters": [
                    {
                        "name": "tier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tier detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TierResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tiers"
                ],
                "summary": "Delete (soft) a tier",
                "description": "Soft-delete a tier.",
                "operationId": "2e299a9713f1e89737cb9bae108423b6",
                "parameters": [
                    {
                        "name": "tier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tiers"
                ],
                "summary": "Update a tier",
                "description": "Update a tier.",
                "operationId": "0cd32adcd5d8ecf8b52ae2bf9ebc795c",
                "parameters": [
                    {
                        "name": "tier",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTierRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated tier",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TierResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/tiers": {
            "get": {
                "tags": [
                    "Tiers"
                ],
                "summary": "List tiers",
                "description": "List tiers (paginated).",
                "operationId": "dd29009ecc247da5b91e1e3119945d9b",
                "responses": {
                    "200": {
                        "description": "Paginated list",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TierCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tiers"
                ],
                "summary": "Create a tier",
                "description": "Create a tier.",
                "operationId": "43929e227d531ca138f789c4f39465cf",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTierRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TierResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/tiers/{id}/restore": {
            "patch": {
                "tags": [
                    "Tiers"
                ],
                "summary": "Restore a tier",
                "description": "Restore a soft-deleted tier.",
                "operationId": "cc153b1d30d6ce859021f03ad95b5158",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored tier",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TierResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Tier is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/tower-skins/{id}": {
            "get": {
                "tags": [
                    "Tower Skins"
                ],
                "summary": "Get a tower skin",
                "description": "Retrieve a single tower skin.",
                "operationId": "745ebc4d903f64d0ee5a9dc2170c4371",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Tower skin detail",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TowerSkinResource"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tower Skins"
                ],
                "summary": "Delete tower skin",
                "description": "Soft-delete a tower skin.",
                "operationId": "20acb679873a55cfc298e7333159bdf2",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "patch": {
                "tags": [
                    "Tower Skins"
                ],
                "summary": "Update tower skin",
                "description": "Update an existing tower skin.",
                "operationId": "4ca75b94098a8095ae45792690df7fc5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTowerSkinRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Updated tower skin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TowerSkinResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        },
        "/tower-skins": {
            "get": {
                "tags": [
                    "Tower Skins"
                ],
                "summary": "List tower skins",
                "description": "List tower skins (paginated).",
                "operationId": "5ec2006a213d56f4459c014aac4625ae",
                "responses": {
                    "200": {
                        "description": "Paginated list of tower skins",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TowerSkinCollection"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tower Skins"
                ],
                "summary": "Create tower skin",
                "description": "Create a new tower skin.",
                "operationId": "328c3ad218c801259f63fd929184672b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/StoreTowerSkinRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TowerSkinResource"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/tower-skins/{id}/restore": {
            "patch": {
                "tags": [
                    "Tower Skins"
                ],
                "summary": "Restore tower skin",
                "description": "Restore a soft-deleted tower skin.",
                "operationId": "ce8fd34da0ddb320fe442f44ce075b63",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Restored tower skin",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TowerSkinResource"
                                }
                            }
                        }
                    },
                    "409": {
                        "description": "Tower skin is not deleted"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "StoreBackgroundSkinRequest": {
                "description": "Payload sent when creating a new BackgroundSkin",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Sunset"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5
                    }
                },
                "type": "object"
            },
            "StoreBonusTypeRequest": {
                "required": [
                    "name",
                    "unit",
                    "bonus_category_id"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Defense Absolute"
                    },
                    "unit": {
                        "description": "How the value is interpreted",
                        "type": "string",
                        "enum": [
                            "percentage",
                            "flat",
                            "seconds"
                        ],
                        "example": "percentage"
                    },
                    "bonus_category_id": {
                        "description": "Category this bonus belongs to",
                        "type": "integer",
                        "example": 1
                    }
                },
                "type": "object"
            },
            "StoreGuardianRequest": {
                "description": "Payload sent when creating a new Guardian",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "StoreMenuRequest": {
                "description": "Payload sent when creating a new Menu",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "StoreProfileBannerRequest": {
                "description": "Payload sent when creating a new ProfileBanner",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "StoreRelicRequest": {
                "required": [
                    "name",
                    "tier_id",
                    "bonus_type_id",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "No Spoon"
                    },
                    "tier_id": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 2
                    },
                    "bonus_type_id": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 9
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.02
                    },
                    "unlock_condition": {
                        "type": "string",
                        "example": "Earn 350 medals Matrix event",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "StoreSongRequest": {
                "description": "Payload sent when creating a new Song",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "StoreTierRequest": {
                "required": [
                    "name"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Rare"
                    }
                },
                "type": "object"
            },
            "StoreTowerSkinRequest": {
                "description": "Payload sent when creating a new TowerSkin",
                "required": [
                    "name",
                    "value"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Celestial Tower"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.75
                    },
                    "eventName": {
                        "type": "string",
                        "example": "Guild Season Finale",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateBackgroundSkinRequest": {
                "description": "Payload for updating an existing BackgroundSkin. All fields optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Interstellar"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.75
                    },
                    "eventName": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Interstellar"
                    }
                },
                "type": "object"
            },
            "UpdateBonusTypeRequest": {
                "description": "Any subset of fields may be supplied to update the bonus type.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Defense Absolute Plus"
                    },
                    "unit": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "flat",
                            "seconds"
                        ],
                        "example": "flat"
                    },
                    "bonus_category_id": {
                        "type": "integer",
                        "example": 2
                    }
                },
                "type": "object"
            },
            "UpdateGuardianRequest": {
                "description": "Payload for updating an existing Guardian. All fields optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme Remix"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.007
                    }
                },
                "type": "object"
            },
            "UpdateMenuRequest": {
                "description": "Payload for updating an existing Menu. All fields optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme Remix"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.007
                    }
                },
                "type": "object"
            },
            "UpdateProfileBannerRequest": {
                "description": "Payload for updating an existing ProfileBanner. All fields optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme Remix"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.007
                    }
                },
                "type": "object"
            },
            "UpdateRelicRequest": {
                "description": "Any subset of fields may be supplied to update the relic.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "No Spoon Mk II"
                    },
                    "tier_id": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 3
                    },
                    "bonus_type_id": {
                        "type": "integer",
                        "minimum": 1,
                        "example": 12
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.05
                    },
                    "unlock_condition": {
                        "type": "string",
                        "example": "Earn 700 medals Matrix event",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "UpdateSongRequest": {
                "description": "Payload for updating an existing Song. All fields optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic Battle Theme Remix"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.007
                    }
                },
                "type": "object"
            },
            "UpdateTierRequest": {
                "description": "Any subset of fields may be supplied to update the tier.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Epic"
                    }
                },
                "type": "object"
            },
            "UpdateTowerSkinRequest": {
                "description": "Payload for updating an existing TowerSkin. All fields optional.",
                "properties": {
                    "name": {
                        "type": "string",
                        "maxLength": 191,
                        "example": "Celestial Tower Deluxe"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.85
                    },
                    "eventName": {
                        "type": "string",
                        "example": "Guild Season Finale",
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "BackgroundSkinCollection": {
                "description": "Paginated list of background skins",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackgroundSkinResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/background-skins?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/background-skins?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/background-skins?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/background-skins"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 62
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BackgroundSkinResource": {
                "description": "A background skin available in the API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Intersteller"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.5
                    },
                    "eventName": {
                        "type": "string",
                        "example": "Intersteller"
                    }
                },
                "type": "object"
            },
            "BonusCategoryResource": {
                "description": "Grouping bucket for bonus types (Damage, Defense, Utility, Misc).",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Defense"
                    }
                },
                "type": "object"
            },
            "BonusTypeCollection": {
                "description": "Paginated list of bonus types",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BonusTypeResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/bonus-types?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/bonus-types?page=3"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/bonus-types?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 3
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/bonus-types"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 120
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BonusTypeResource": {
                "description": "Master definition of a bonus type",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Defense Absolute"
                    },
                    "unit": {
                        "type": "string",
                        "enum": [
                            "percentage",
                            "flat",
                            "seconds"
                        ],
                        "example": "percentage"
                    },
                    "category": {
                        "$ref": "#/components/schemas/BonusCategoryResource"
                    }
                },
                "type": "object"
            },
            "GuardianCollection": {
                "description": "Paginated list of Guardians",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuardianResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/guardians?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/guardians?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/guardians?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/guardians"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "GuardianResource": {
                "description": "Represents a Guardian available in the API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Muse"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "MenuCollection": {
                "description": "Paginated list of Menus",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MenuResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/menus?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/menus?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/menus?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/menus"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "MenuResource": {
                "description": "Represents a Menu available in the API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Dark Being"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "ProfileBannerCollection": {
                "description": "Paginated list of ProfileBanners",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProfileBannerResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/profile-banners?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/profile-banners?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/profile-banners?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/profile-banners"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "ProfileBannerResource": {
                "description": "Represents a ProfileBanner available in the API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Mech World"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "RelicBonusResource": {
                "description": "Bonus as it appears on a relic (includes rolled value)",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BonusTypeResource"
                    },
                    {
                        "properties": {
                            "value": {
                                "type": "number",
                                "format": "float",
                                "example": 0.02
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "RelicCollection": {
                "description": "Paginated list of relics",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelicResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/relics?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/relics?page=5"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/relics?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 5
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/relics"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 236
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "RelicResource": {
                "description": "Single relic payload",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "No Spoon"
                    },
                    "tier": {
                        "type": "string",
                        "example": "Rare"
                    },
                    "unlockCondition": {
                        "type": "string",
                        "example": "Earn 350 medals Matrix event",
                        "nullable": true
                    },
                    "bonuses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RelicBonusResource"
                        }
                    }
                },
                "type": "object"
            },
            "SongCollection": {
                "description": "Paginated list of songs",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SongResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/songs?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/songs?page=2"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/songs?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 2
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/songs"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 100
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "SongResource": {
                "description": "Represents a song available in the API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Epic Battle Theme"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.006
                    }
                },
                "type": "object"
            },
            "TierCollection": {
                "description": "Paginated list of tiers",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TierResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tiers?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tiers?page=3"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tiers?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 3
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tiers"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 3
                            },
                            "total": {
                                "type": "integer",
                                "example": 6
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TierResource": {
                "description": "Lookup record for a tier",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 2
                    },
                    "name": {
                        "type": "string",
                        "example": "Rare"
                    }
                },
                "type": "object"
            },
            "TowerSkinCollection": {
                "description": "Paginated list of tower skins",
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TowerSkinResource"
                        }
                    },
                    "links": {
                        "properties": {
                            "first": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tower-skins?page=1"
                            },
                            "last": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tower-skins?page=4"
                            },
                            "prev": {
                                "type": "string",
                                "format": "uri",
                                "example": null,
                                "nullable": true
                            },
                            "next": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tower-skins?page=2",
                                "nullable": true
                            }
                        },
                        "type": "object"
                    },
                    "meta": {
                        "properties": {
                            "current_page": {
                                "type": "integer",
                                "example": 1
                            },
                            "from": {
                                "type": "integer",
                                "example": 1
                            },
                            "last_page": {
                                "type": "integer",
                                "example": 4
                            },
                            "path": {
                                "type": "string",
                                "format": "uri",
                                "example": "/api/v1/tower-skins"
                            },
                            "per_page": {
                                "type": "integer",
                                "example": 50
                            },
                            "to": {
                                "type": "integer",
                                "example": 50
                            },
                            "total": {
                                "type": "integer",
                                "example": 200
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "TowerSkinResource": {
                "description": "A tower skin available in the API",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Celestial Tower"
                    },
                    "value": {
                        "type": "number",
                        "format": "float",
                        "example": 0.75
                    },
                    "eventName": {
                        "type": "string",
                        "example": "Guild Season Finale",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Background Skins",
            "description": "Manage available background skins"
        },
        {
            "name": "Bonus Types",
            "description": "CRUD & restore operations for bonus-type definitions"
        },
        {
            "name": "Guardians",
            "description": "Manage available guardians"
        },
        {
            "name": "Menus",
            "description": "Manage available menus"
        },
        {
            "name": "ProfileBanners",
            "description": "Manage available profileBanners"
        },
        {
            "name": "Relics",
            "description": "CRUD & restore operations for relics"
        },
        {
            "name": "Songs",
            "description": "Manage available songs"
        },
        {
            "name": "Tiers",
            "description": "CRUD & restore operations for tier lookup values"
        },
        {
            "name": "Tower Skins",
            "description": "Manage available tower skins"
        }
    ]
}